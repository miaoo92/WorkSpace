<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
	
	<!-- 配置数据源 -->
	<bean id="ds"  class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="url"  value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="driverClassName"  value="oracle.jdbc.OracleDriver"/>
		<property name="username" value="lhh"/>
		<property name="password" value="123456"/>
	</bean>
	
	<!-- 配置SqlSessionFactory -->
	<bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">  
      <property name="dataSource" ref="ds" />
      <!-- 指定扫描哪些路径下的配置文件 -->
      <property name="mapperLocations"  value="classpath:com/tarena/entity/*.xml"/>
    </bean>
    
    <!-- 配置MyBatis注解 -->
    <!-- 
    	在Spring容器初始化时，Spring会自动创建
    	MapperScannerConfigurer，然后自动调用
    	它扫描指定包下，带有指定注解的接口，然后
    	自动实现这个接口，在实现类中它主要封装了
    	创建连接、关闭连接、开启事务、关闭事务
    	的代码，这样在开发时就可以简化了。
     -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
       <!-- 指定MapperScannerConfigurer要扫描的包 -->
       <property name="basePackage"  value="com.tarena.dao" />
       <!-- 指定MapperScannerConfigurer要扫描的注解， 该注解需要自定义。 -->
       <property name="annotationClass"  value="com.tarena.annotation.MyBatisRepository"/>
	</bean>
	
	<!-- 开启IOC注解扫描 -->
	<context:component-scan  base-package="com.tarena" />
	
	<!-- 开启Spring MVC注解扫描 -->
	<mvc:annotation-driven />
	
	<!-- 处理请求转发 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/"/>
		<property name="suffix" value=".jsp"/>
	</bean>

</beans>